'use strict';

const map = new WeakMap;
const sysmsgs = require('./sysmsgs.json');

function parseSysmsg(str) {
  if (str[0] !== '@') return null;

  const args = str.split('\x0B');
  const id = args.shift();
  const params = {};
  while (args.length > 0) {
    params[args.shift()] = args.shift();
  }

  return { id: id, params: params };
}

function sysmsg(dispatch) {
  this.dispatch = dispatch;

  if (!map.has(dispatch)) {
    map.set(dispatch, {});

    dispatch.hook('sSystemMessage', function sSystemMessage(event) {
      const data = parseSysmsg(event.message);
      if (!data) return;

      const hooks = map.get(dispatch)[data];
      if (!hooks) return;

      for (let hook of hooks) {
        const result = hook(data.params);

        // TODO handle other cases
        if (result === false) return false;
      }
    });
  }
};

sysmsg.parse = sysmsg.prototype.parse = parseSysmsg;

sysmsg.prototype.on = function on(msg, cb) {
  msg = (msg + '').toUpperCase();
  const id = sysmsgs[msg];
  if (id == null) {
    console.warn('[sysmsg] Unknown system message "' + msg + '"');
    return;
  }

  const hooks = map.get(this.dispatch);
  if (!hooks[msg]) hooks[msg] = [];
  hooks[msg].push(cb);
};

module.exports = sysmsg;
